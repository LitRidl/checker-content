<?xml version="1.0" encoding="utf-8" ?>
<problem package="ru.ejudge.sample_contest" id="29" type="standard">
  <statement language="ru_RU">
    <title>Вариант &numero;29</title>

    <description><p>Необходимо определить попадание движущейся по двухмерной целочисленной сетке точки в специальную геометрическую область не более чем за 50 шагов. Передвижение точки определяется специальными формулами и зависит от её текущего положения (i, j), динамического параметра движения l и дискретного времени k. Положение точки на сетке (i0, j0) и значение динамического параметра l0 в нулевой момент времени (k = 0) подаются со стандартного потока ввода. Результатом работы программы является информация о попадании точки в заданную геометрическую область. Вычисления останавливаются при попадании точки в заданную область или при превышении допустимого количества шагов.</p>
    <p>Геометрическая область: эллипс с центром в точке (20, 0) и проходящей через точки (10, 0), (30, 0), (20, 5) и (20, -5).</p>
    <p>Формулы для вычисления координат и параметра см. в методических указаниях.</p><br/>
    </description>

    <notes><p>Поскольку значения всех параметров движения в нулевой момент времени (при k = 0) заданы, первым моментом времени, с которого вычисления идут по формуле, считается шаг k = 1, а последним, пятидесятым, k = 50. При этом получается, что для вычисления значений в следующий момент времени k + 1 в формулах используется старое значение k. Следовательно, последнее вычисление по формулам происходит на k = 49, а k = 50 относится уже к его результату этих вычислений.</p>
    <p>Обратите внимание, что операция % в С99 не соответствует операции mod. За комментариями см. примечания к ЛР №9 в методических указаниях. Например, mod(-9, 4) = 3, mod(9, -4) = 3 (результат операции неотрицателен), а mod(9, 4) = 1. Аналогично, округляющая результат истинного деления вниз операция div не соответствует отсекающей дробную часть операции деления / в С99: -4 / 3 = [-1.33...] = -1, но div(-4, 3) = floor(-1.33...) = -2.</p>
    <p>Проритет операций mod и div совпадает с приоритетом операции умножения: a * b * c mod d = ((a * b) * c) mod d. Все операции имеют левую ассоциативность.</p>
    </notes>

    <input_format><p>На стандартный поток ввода подаются три числа i, j и l, соответствующие начальным значениям параметров движения. Нужно считать что принимаемые ими значения всегда помещаются в целочисленный тип int, но при этом не следует ожидать что для проверки попадания точки в геометрическую область будет достаточно целочисленной арифметики.</p><br/>
    </input_format>

    <output_format><p>Вывод осуществляется в стандартный поток вывода. В первой строке выводится строка Yes или No в зависимости от попадания точки на каком-либо шаге в заданную геометрическую область. Во второй строке через пробел выводятся 3 числа i, j и k в своих финальных значениях.</p><br/>
    </output_format>
  </statement>

  <examples>
    <example>
      <input><pre>0 0 0</pre></input>
      <output><pre>Yes
10 0 0 11
</pre>
      </output>
    </example>
  </examples>
</problem>
